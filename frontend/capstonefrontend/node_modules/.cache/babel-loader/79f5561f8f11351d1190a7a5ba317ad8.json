{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sanchayata\\\\Documents\\\\GitHub\\\\Recipe-Finder\\\\frontend\\\\capstonefrontend\\\\src\\\\Containers\\\\searchbyingredientscontainer2.js\",\n    _s = $RefreshSig$();\n\nimport { useHistory } from \"react-router\";\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport useForm from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function GetRecipeFromIngredients(props) {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  const [recipes, setRecipes] = React.useState([]);\n  const [state, setState] = React.useState({\n    ingredient: \"\"\n  });\n  React.useEffect(() => {\n    axios.get('http://localhost:8080/recipe-ingredients/get-recipe-names', {\n      params: {\n        ingredientName1: state.ingredient\n      }\n    }).then(response => {\n      setRecipes(response.data);\n    });\n  }, []);\n\n  if (!recipes) {\n    return null;\n  } // const handleChange=(e) =>{\n  //     // this.setState({\n  //     //     [e.target.name]: e.target.value\n  //     // })\n  //     // const {id, value} = e.target.value\n  //     // setState(prevState => ({\n  //     //     ...prevState,\n  //     //     [id] : value\n  //     // }))\n  //     let name = e.target.name;\n  //     let value = e.target.value;\n  // }\n  // const handleSubmit=(e) => {\n  //     e.preventDefault();\n  // }\n\n\n  const onSubmit = data => {\n    console.log(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Search\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Search By Ingredient\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"header-search\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"visually-hidden\",\n            children: \"Search Ingredient\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: state.ingredient // onChange={handleChange}\n            ,\n            id: \"header-search\",\n            placeholder: \"Enter Ingredient\",\n            name: \"ingredient\",\n            ref: register\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          value: \"Submit\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), recipes.map((recipe, index) => /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"/recipes\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", recipe]\n      }, recipe.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 64\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 100\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 44\n    }, this))]\n  }, void 0, true);\n}\n\n_s(GetRecipeFromIngredients, \"U7MUDf5jmno1tk3n2wIuCY1bJrM=\", false, function () {\n  return [useForm];\n});\n\n_c = GetRecipeFromIngredients;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetRecipeFromIngredients\");","map":{"version":3,"sources":["C:/Users/Sanchayata/Documents/GitHub/Recipe-Finder/frontend/capstonefrontend/src/Containers/searchbyingredientscontainer2.js"],"names":["useHistory","axios","React","useState","useForm","GetRecipeFromIngredients","props","register","handleSubmit","errors","recipes","setRecipes","state","setState","ingredient","useEffect","get","params","ingredientName1","then","response","data","onSubmit","console","log","map","recipe","index","id"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,cAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,OAAP,MAAoB,iBAApB;;;AAEA,eAAe,SAASC,wBAAT,CAAkCC,KAAlC,EAAyC;AAAA;;AACpD,QAAM;AAACC,IAAAA,QAAD;AAAWC,IAAAA,YAAX;AAAyBC,IAAAA;AAAzB,MAAmCL,OAAO,EAAhD;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBT,KAAK,CAACC,QAAN,CAAe,EAAf,CAA9B;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBX,KAAK,CAACC,QAAN,CAAe;AACrCW,IAAAA,UAAU,EAAG;AADwB,GAAf,CAA1B;AAIAZ,EAAAA,KAAK,CAACa,SAAN,CAAgB,MAAM;AACpBd,IAAAA,KAAK,CAACe,GAAN,CAAU,2DAAV,EAAuE;AAACC,MAAAA,MAAM,EAAE;AAACC,QAAAA,eAAe,EAAEN,KAAK,CAACE;AAAxB;AAAT,KAAvE,EAAuHK,IAAvH,CAA6HC,QAAD,IAAa;AACrIT,MAAAA,UAAU,CAACS,QAAQ,CAACC,IAAV,CAAV;AACH,KAFD;AAGD,GAJD,EAIG,EAJH;;AAMA,MAAG,CAACX,OAAJ,EAAa;AACT,WAAO,IAAP;AACH,GAfmD,CAiBpD;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;;;AAEA,QAAMY,QAAQ,GAAID,IAAD,IAAU;AACvBE,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACH,GAFD;;AAKA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAG,QAAjB;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,QAAQ,EAAEb,YAAY,CAACc,QAAD,CAA5B;AAAA,gCACI;AAAO,UAAA,OAAO,EAAC,eAAf;AAAA,kCACI;AAAM,YAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEA;AACI,YAAA,IAAI,EAAC,MADT;AAEI,YAAA,KAAK,EAAEV,KAAK,CAACE,UAFjB,CAGI;AAHJ;AAII,YAAA,EAAE,EAAC,eAJP;AAKI,YAAA,WAAW,EAAC,kBALhB;AAMI,YAAA,IAAI,EAAC,YANT;AAOI,YAAA,GAAG,EAAIP;AAPX;AAAA;AAAA;AAAA;AAAA,kBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAaI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,KAAK,EAAC,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAoBKG,OAAO,CAACe,GAAR,CAAY,CAACC,MAAD,EAASC,KAAT,kBACkB;AAAG,MAAA,IAAI,EAAC,UAAR;AAAA,8BAAoB;AAAA,wBAAuBD,MAAvB;AAAA,SAAUA,MAAM,CAACE,EAAjB;AAAA;AAAA;AAAA;AAAA,cAApB,eAAwD;AAAA;AAAA;AAAA;AAAA,cAAxD;AAAA;AAAA;AAAA;AAAA;AAAA,YAD9B,CApBL;AAAA,kBADJ;AA4BH;;GAvEuBvB,wB;UACqBD,O;;;KADrBC,wB","sourcesContent":["import { useHistory } from \"react-router\";\r\nimport axios from \"axios\";\r\nimport React, {useState} from \"react\";\r\nimport useForm from \"react-hook-form\";\r\n\r\nexport default function GetRecipeFromIngredients(props) {\r\n    const {register, handleSubmit, errors} = useForm();\r\n    const [recipes, setRecipes] = React.useState([])\r\n    const [state, setState] = React.useState({\r\n        ingredient : \"\"\r\n    })\r\n\r\n    React.useEffect(() => {\r\n      axios.get('http://localhost:8080/recipe-ingredients/get-recipe-names', {params: {ingredientName1: state.ingredient} }).then((response) =>{\r\n          setRecipes(response.data)\r\n      });\r\n    }, []);\r\n\r\n    if(!recipes) {\r\n        return null;\r\n    }\r\n\r\n    // const handleChange=(e) =>{\r\n    //     // this.setState({\r\n    //     //     [e.target.name]: e.target.value\r\n    //     // })\r\n\r\n    //     // const {id, value} = e.target.value\r\n    //     // setState(prevState => ({\r\n    //     //     ...prevState,\r\n    //     //     [id] : value\r\n    //     // }))\r\n\r\n    //     let name = e.target.name;\r\n    //     let value = e.target.value;\r\n\r\n    // }\r\n\r\n    // const handleSubmit=(e) => {\r\n    //     e.preventDefault();\r\n        \r\n    // }\r\n\r\n    const onSubmit = (data) => {\r\n        console.log(data)\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className = \"Search\"> \r\n                <h1>Search By Ingredient</h1>\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <label htmlFor=\"header-search\">\r\n                        <span className=\"visually-hidden\">Search Ingredient</span>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={state.ingredient}\r\n                        // onChange={handleChange}\r\n                        id=\"header-search\"\r\n                        placeholder=\"Enter Ingredient\"\r\n                        name=\"ingredient\" \r\n                        ref = {register}\r\n                    />\r\n                    </label>\r\n                    <button type=\"submit\" value=\"Submit\">Search</button>\r\n                </form>\r\n            </div>\r\n\r\n            {recipes.map((recipe, index) => \r\n                                           <a href=\"/recipes\" ><div key={recipe.id}> {recipe}</div><br></br></a>\r\n                                            )}\r\n        </>\r\n    )\r\n            \r\n\r\n}"]},"metadata":{},"sourceType":"module"}